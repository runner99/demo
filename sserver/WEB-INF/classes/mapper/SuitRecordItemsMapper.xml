<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mrworlds.mapper.SuitRecordItemsMapper" >
  <resultMap id="BaseResultMap" type="cn.mrworlds.pojo.SuitRecordItems" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="suitID" property="suitid" jdbcType="INTEGER" />
    <result column="sceneID" property="sceneid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, suitID, sceneID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.mrworlds.pojo.SuitRecordItemsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from suit_record_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.mrworlds.pojo.SuitRecordItemsExample" >
    delete from suit_record_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.mrworlds.pojo.SuitRecordItems" >
    insert into suit_record_items (id, suitID, sceneID
      )
    values (#{id,jdbcType=INTEGER}, #{suitid,jdbcType=INTEGER}, #{sceneid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.mrworlds.pojo.SuitRecordItems" >
    insert into suit_record_items
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="suitid != null" >
        suitID,
      </if>
      <if test="sceneid != null" >
        sceneID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="suitid != null" >
        #{suitid,jdbcType=INTEGER},
      </if>
      <if test="sceneid != null" >
        #{sceneid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.mrworlds.pojo.SuitRecordItemsExample" resultType="java.lang.Integer" >
    select count(*) from suit_record_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update suit_record_items
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.suitid != null" >
        suitID = #{record.suitid,jdbcType=INTEGER},
      </if>
      <if test="record.sceneid != null" >
        sceneID = #{record.sceneid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update suit_record_items
    set id = #{record.id,jdbcType=INTEGER},
      suitID = #{record.suitid,jdbcType=INTEGER},
      sceneID = #{record.sceneid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!--  List<Integer> selectRecordIDsBySuitID(@Param ("suitID") Integer suitID);-->
  <select id="selectRecordIDsBySuitID" resultType="java.lang.Integer">
  select distinct id from suit_record_items
  where suitID = #{suitID,jdbcType=INTEGER}
</select>

  <!--  Integer selectRecordBySuitIDAndScenneID(@Param ("suitID") Integer suitID,@Param ("sceneID") Integer sceneID);-->

  <select id="selectRecordBySuitIDAndScenneID" resultType="java.lang.Integer">
  select   id from suit_record_items
  where suitID = #{suitID,jdbcType=INTEGER} and sceneID = #{sceneID,jdbcType=INTEGER}
 </select>
</mapper>