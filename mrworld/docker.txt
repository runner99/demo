Docker核心
虚拟化技术
IAAS (设施即服务）,PAAS（平台即服务） ,SAAS（软件即服务） 是云计算三个步骤 。
虚拟化是对硬件进行管理，有一个物理服务器，并运行多个虚拟服务器，这些服务器共享一系列设施 宿主机和虚拟机。通过hyopeVisor 虚拟机监视器 【一类软件的统称】。运行在客户服务器上的一个层
通过它 可以虚拟出  ，虚拟机之间分离 。每一次都需要安装一台虚拟机，创建虚拟机，共享CPU内存，会浪费磁盘空间，操作比较繁琐，虚拟机迁移过程笨重。
虚拟化容器 container解决迁移问题
容器基于硬件的虚拟化技术，容器视为一个进程，容器化技术，容器是隔离的进程，进程被销毁，数据和容器耶没有了。需要对容器里的数据进行备份。容器拥有自己的一套文件系统和网络系统。轻量级的虚拟化
是为了创造
容器时代码和环境的集合 。每一个虚拟机需要完整的操作系统，容器不需要
容器虚拟化技术
CPU虚拟化，最大的利用云端的引硬件 。CPU利用率
网络虚拟化，硬件对网络有恒搞得要求，VPN 是其中的一种 
服务器虚拟化，
存储虚拟化云平台存储
应用的虚拟化
网络  ，容器管理部分非常好 ，磁盘占有比较疯狂，
Bridge 模式 ：创建一对虚拟网卡的接口，分别放到本地主机和容器中
Host 模式： 和宿主机共用一个IP地址，以这个模式启动容器，那么容器不会得到网络的命名空间 。缺陷就是网络隔离性较差。
none模式： 
overlay网络：
macvlan模式：

r0J0y00x
docker 私服地址：

docker的mysql 启动命令
docker run -itd --name mysql --restart always --privileged=true -p 3389:3306 -e MYSQL_ROOT_PASSWORD=PO5:zhj*hudeMD -v /docker/mysql:/var/lib/mysql mysql:5.7.31 --character-set-server=utf8 --collation-server=utf8_general_ci
docker的redis 启动命令  
docker run -p 6380:6379 -v /docker/redis/data:/data --name redis01 -d 47.93.26.215:8001/commen/redis:v1     redis-server --save 60 1 --loglevel warning
docker run -p 6380:6379 -v /docker/redis/data:/data --name redis01 -d 47.93.26.215:8001/commen/redis:v1     --requirepass "zhoujian"
docker 进入redis 客户端的docker 命令
docker exec -it redis01 redis-cli

docker build --rm -t 47.93.26.215:8001/services/syncroom:v1 --build-arg JAR_FILE=dockerdemo.jar  .

RUN echo "http: //mirrors.ustc.edu.cn /alpine/v3.3/main/" > /etc/apk/repositories && \
    echo "https://dl-4.alpinelinux.org/alpine/v3.15/community/x86/" >> /etc/apk/repositories
 
# 安装需要的软件
RUN apk update && \
    apk add --no-cache ca-certificates && \
    apk add --no-cache curl bash tree tzdata && \
    cp -rf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

docker build --rm -t roomserver:v1 --build-arg JAR_FILE=roomserver.jar .
docker run -itd --name roomserver -p 11111:11111 47.93.26.215:8001/services/syncroom:v1
docker build --rm -t messageserver:v1 --build-arg JAR_FILE=roomserver.jar .
docker run -itd --name messageserver -p 11110:11110  messageserver:v1 


一、安装docker 
1.打包jar，制作支付模块镜像 
2.docker 启动nginx，设置SSL 
3.docker 启动mysql 
4.docker 启动支付模块
5.编写docker-compose 文件
